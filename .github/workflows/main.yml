name: Deploy Request Approval System App to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven

      - name: Run Tests with Maven
        run: ./mvnw test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build Docker Image and Push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/requestapprovalsystem:latest
          
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            set -e

            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/requestapprovalsystem:latest
  
            # Fetch secrets from AWS Secrets Manager
            echo "Fetching RDS credentials from Secrets Manager..."
            SECRET=$(aws secretsmanager get-secret-value --secret-id ${{ secrets.DB_SECRETS_ID }} --query SecretString --output text)
            DB_USERNAME=$(echo $SECRET | jq -r '.username')
            DB_PASSWORD=$(echo $SECRET | jq -r '.password')
            DB_URL=jdbc:postgres://${{ secrets.DB_ENDPOINT }}:5432/${{ secrets.DB_NAME }}
  
            # Stop and remove the existing Docker container
            echo "Stopping and removing existing Docker container..."
            docker stop requestapprovalsystem || true
            docker rm requestapprovalsystem || true
  
            # Build and run the new Docker container
            echo "Starting the Docker container..."
            docker run -d \
              --name requestapprovalsystem \
              -p 8080:8080 \
              -e SPRING_DATASOURCE_USERNAME=$DB_USERNAME \
              -e SPRING_DATASOURCE_PASSWORD=$DB_PASSWORD \
              -e SPRING_DATASOURCE_URL=$DB_URL \
              ${{ secrets.DOCKERHUB_USERNAME }}/requestapprovalsystem:latest
          EOF
