name: Deploy Request Approval System App to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # build:
  #   runs-on: self-hosted
  #   steps:
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
      
  #     - name: Build Docker Image and Push to Docker Hub
  #       uses: docker/build-push-action@v6
  #       with:
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/requestapprovalsystem:latest
          
  deploy:
    runs-on: self-hosted
    # needs: build
    steps:
      - name: Set up SSH
        run: |
          set -x  # Enable debug mode
          mkdir -p ~/.ssh  # Ensure the .ssh directory exists
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa  # Write the private key
          chmod 600 ~/.ssh/id_rsa  # Set permissions for the private key
          cat ~/.ssh/id_rsa  # Debug: Print the private key (check format, will be redacted in logs)
          ssh-keyscan -H "${{ secrets.EC2_PUBLIC_IP }}" >> ~/.ssh/known_hosts || echo "ssh-keyscan failed"  # Add host key to known_hosts
          cat ~/.ssh/known_hosts  # Debug: Print known_hosts to verify the host key is added
        shell: bash

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            set -e

            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/requestapprovalsystem:latest
  
            # Fetch secrets from AWS Secrets Manager
            echo "Fetching RDS credentials from Secrets Manager..."
            SECRET=$(aws secretsmanager get-secret-value --secret-id ${{ secrets.DB_SECRETS_ID }} --query SecretString --output text)
            DB_USERNAME=$(echo $SECRET | jq -r '.username')
            DB_PASSWORD=$(echo $SECRET | jq -r '.password')
            DB_URL=jdbc:postgresql://${{ secrets.DB_ENDPOINT }}:5432/
  
            # Stop and remove the existing Docker container
            echo "Stopping and removing existing Docker container..."
            docker stop requestapprovalsystem || true
            docker rm requestapprovalsystem || true
  
            # Build and run the new Docker container
            echo "Starting the Docker container..."
            docker run -d \
              --name requestapprovalsystem \
              -p 8080:8080 \
              -e SPRING_DATASOURCE_USERNAME=$DB_USERNAME \
              -e SPRING_DATASOURCE_PASSWORD=$DB_PASSWORD \
              -e SPRING_DATASOURCE_URL=$DB_URL \
              ${{ secrets.DOCKERHUB_USERNAME }}/requestapprovalsystem:latest
          EOF
